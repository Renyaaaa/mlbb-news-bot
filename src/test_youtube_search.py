#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ YouTube
"""

import os
from dotenv import load_dotenv
from googleapiclient.discovery import build

def test_youtube_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –≤–∏–¥–µ–æ –Ω–∞ YouTube"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –≤–∏–¥–µ–æ –Ω–∞ YouTube...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    youtube_api_key = os.getenv("YOUTUBE_API_KEY")
    youtube_channel_id = os.getenv("YOUTUBE_CHANNEL_ID")
    
    if not youtube_api_key:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç YOUTUBE_API_KEY")
        return False
    
    if not youtube_channel_id:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç YOUTUBE_CHANNEL_ID")
        return False
    
    print(f"‚úÖ YouTube API Key: {youtube_api_key[:20]}...")
    print(f"‚úÖ YouTube Channel ID: {youtube_channel_id}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º YouTube API –∫–ª–∏–µ–Ω—Ç
        youtube = build("youtube", "v3", developerKey=youtube_api_key)
        print("‚úÖ YouTube API –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∫–∞–Ω–∞–ª—É
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∫–∞–Ω–∞–ª—É {youtube_channel_id}...")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±—ã–µ –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ
        request = youtube.search().list(
            part="snippet",
            channelId=youtube_channel_id,
            q="MLBB",  # –ò—â–µ–º –ª—é–±—ã–µ –≤–∏–¥–µ–æ —Å MLBB
            order="relevance",
            maxResults=10
        )
        
        response = request.execute()
        items = response.get("items", [])
        
        if not items:
            print("‚ùå –ù–∞ –∫–∞–Ω–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ —Å –∑–∞–ø—Ä–æ—Å–æ–º 'MLBB'")
            print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π YOUTUBE_CHANNEL_ID")
            print("   - –ù–∞ –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç –≤–∏–¥–µ–æ –ø–æ MLBB")
            print("   - API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(items)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ
        print("\nüìπ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ:")
        for i, item in enumerate(items[:5], 1):
            if item["id"]["kind"] == "youtube#video":
                title = item["snippet"]["title"]
                video_id = item["id"]["videoId"]
                url = f"https://www.youtube.com/watch?v={video_id}"
                print(f"  {i}. {title}")
                print(f"     {url}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–µ—Ä–æ—è
        test_hero = "Layla"
        print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –≥–µ—Ä–æ—è: {test_hero}")
        
        search_queries = [
            test_hero,
            f"{test_hero} MLBB",
            f"{test_hero} tutorial"
        ]
        
        for query in search_queries:
            print(f"  üîé –ü–æ–∏—Å–∫: '{query}'")
            
            request = youtube.search().list(
                part="snippet",
                channelId=youtube_channel_id,
                q=query,
                order="relevance",
                maxResults=3
            )
            
            response = request.execute()
            items = response.get("items", [])
            
            if items:
                print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(items)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                for item in items[:2]:
                    if item["id"]["kind"] == "youtube#video":
                        title = item["snippet"]["title"]
                        print(f"      - {title}")
            else:
                print(f"    ‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å YouTube API: {e}")
        return False

if __name__ == "__main__":
    success = test_youtube_search()
    if success:
        print("\nüéâ –¢–µ—Å—Ç YouTube –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –¢–µ—Å—Ç YouTube –ø–æ–∏—Å–∫–∞ –Ω–µ –ø—Ä–æ—à–µ–ª!")
