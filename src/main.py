import os
import sys
import random
from datetime import datetime
from dotenv import load_dotenv

from config import YOUTUBE_API_KEY, YOUTUBE_CHANNEL_ID, DRY_RUN
from googleapiclient.discovery import build

from storage.db import DB
from ai.generator import generate_hero_post
from publisher.telegram_client import send_post
from heroes_list import HEROES  # —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö 126 –≥–µ—Ä–æ–µ–≤

load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


def pick_new_hero(db: DB) -> str:
    """–í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≥–µ—Ä–æ—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—â—ë –Ω–µ –ø–æ—Å—Ç–∏–ª–∏"""
    used = db.used_heroes()
    remaining = [h for h in HEROES if h not in used]

    if not remaining:
        print("–í—Å–µ –≥–µ—Ä–æ–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã! üéâ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å.")
        db.reset_heroes()
        remaining = HEROES[:]

    return random.choice(remaining)


def find_hero_video(youtube, hero_name: str) -> tuple[str, str, str] | None:
    """–ò—â–µ–º –≤–∏–¥–µ–æ –Ω–∞ YouTube –ø–æ –∏–º–µ–Ω–∏ –≥–µ—Ä–æ—è"""
    print(f"üîç –ò—â–µ–º –≤–∏–¥–µ–æ –¥–ª—è –≥–µ—Ä–æ—è {hero_name}...")
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∏—Å–∫–∞
    search_queries = [
        hero_name,  # –¢–æ—á–Ω–æ–µ –∏–º—è
        f"{hero_name} MLBB",  # –ò–º—è + MLBB
        f"{hero_name} Mobile Legends",  # –ò–º—è + Mobile Legends
        f"{hero_name} tutorial",  # –ò–º—è + tutorial
        f"{hero_name} guide",  # –ò–º—è + guide
        f"{hero_name} gameplay",  # –ò–º—è + gameplay
    ]
    
    for query in search_queries:
        print(f"  üîé –ü—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫: '{query}'")
        
        try:
            request = youtube.search().list(
                part="snippet",
                channelId=YOUTUBE_CHANNEL_ID,
                q=query,
                order="relevance",
                maxResults=5  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            )
            response = request.execute()
            items = response.get("items", [])
            
            # –ò—â–µ–º –≤–∏–¥–µ–æ —Å—Ä–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            for item in items:
                if item["id"]["kind"] != "youtube#video":
                    continue
                    
                video_id = item["id"]["videoId"]
                video_title = item["snippet"]["title"]
                video_url = f"https://www.youtube.com/watch?v={video_id}"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–µ—Ä–æ—è –∏–ª–∏ –ø–æ—Ö–æ–∂–∏–µ —Å–ª–æ–≤–∞
                title_lower = video_title.lower()
                hero_lower = hero_name.lower()
                
                if (hero_lower in title_lower or 
                    any(word in title_lower for word in ["mlbb", "mobile legends", "tutorial", "guide", "gameplay"])):
                    
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ: {video_title}")
                    return video_title, video_url, item["snippet"]["publishedAt"]
            
        except Exception as e:
            print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–ª—è '{query}': {e}")
            continue
    
    print(f"‚ùå –í–∏–¥–µ–æ –¥–ª—è –≥–µ—Ä–æ—è {hero_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
    print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å YOUTUBE_CHANNEL_ID")
    print("   - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ –µ—Å—Ç—å –≤–∏–¥–µ–æ –ø–æ MLBB")
    print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ API –∫–ª—é—á –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É")
    return None


def run_hero_post():
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º MLBB Hero Trick Bot...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not YOUTUBE_API_KEY:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç YOUTUBE_API_KEY")
        return
    
    if not YOUTUBE_CHANNEL_ID:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç YOUTUBE_CHANNEL_ID")
        return
    
    try:
        db = DB()
        youtube = build("youtube", "v3", developerKey=YOUTUBE_API_KEY)
        print("‚úÖ YouTube API –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return

    hero = pick_new_hero(db)
    print(f"üéØ –í—ã–±—Ä–∞–Ω –≥–µ—Ä–æ–π: {hero}")

    video_data = find_hero_video(youtube, hero)
    if not video_data:
        print(f"‚ö†Ô∏è –í–∏–¥–µ–æ –ø–æ –≥–µ—Ä–æ—é {hero} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return

    video_title, video_url, published_at = video_data

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ‚Äî –ø—É–±–ª–∏–∫–æ–≤–∞–ª–æ—Å—å –ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ
    if db.seen(f"hero:{hero}"):
        print(f"‚ÑπÔ∏è –ì–µ—Ä–æ–π {hero} —É–∂–µ –±—ã–ª –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω")
        return

    print(f"ü§ñ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–æ—Å—Ç–∞ –¥–ª—è {hero}...")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å—Ç —á–µ—Ä–µ–∑ AI
    try:
        post_text = generate_hero_post(hero=hero, video_url=video_url)
        print(f"‚úÖ –ü–æ—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        if DRY_RUN:
            print("=== TEST POST ===")
            print(post_text)
            print("=================")
            return
        else:
            print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ Telegram...")
            success = send_post(post_text)
            
            if success:
                db.add_if_absent(f"hero:{hero}", hero, "HeroTrick", published_at)
                db.mark_posted(f"hero:{hero}")
                print(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –ø–æ—Å—Ç —Å –≥–µ—Ä–æ–µ–º {hero}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞ —Å –≥–µ—Ä–æ–µ–º {hero}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞: {e}")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò –∏ API –∫–ª—é—á–∏")


if __name__ == "__main__":
    print("=== Running MLBB Hero Trick Bot ===")
    run_hero_post()
    print("=== Run finished ===")
