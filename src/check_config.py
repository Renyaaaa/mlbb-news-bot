#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
"""

import os
from dotenv import load_dotenv

def check_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MLBB News Bot...")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars = {
        "TELEGRAM_BOT_TOKEN": "Telegram Bot Token",
        "TELEGRAM_CHANNEL": "Telegram Channel Username", 
        "OPENROUTER_API_KEY": "OpenRouter API Key",
        "YOUTUBE_API_KEY": "YouTube API Key",
        "YOUTUBE_CHANNEL_ID": "YouTube Channel ID"
    }
    
    optional_vars = {
        "OPENROUTER_MODEL": "OpenRouter Model (default: gpt-4o-mini)",
        "LANGUAGE": "Language (default: en)",
        "DRY_RUN": "Dry Run Mode (default: false)"
    }
    
    print("üìã –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    missing_required = []
    
    for var, description in required_vars.items():
        value = os.getenv(var)
        if value:
            # –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            masked_value = value[:8] + "..." if len(value) > 8 else value
            print(f"  ‚úÖ {description}: {masked_value}")
        else:
            print(f"  ‚ùå {description}: –ù–ï –ù–ê–ô–î–ï–ù–ê")
            missing_required.append(var)
    
    print("\nüìã –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    for var, description in optional_vars.items():
        value = os.getenv(var)
        if value:
            print(f"  ‚úÖ {description}: {value}")
        else:
            print(f"  ‚ö†Ô∏è  {description}: –Ω–µ –∑–∞–¥–∞–Ω–∞ (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
    
    print("\n" + "=" * 50)
    
    if missing_required:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò:")
        for var in missing_required:
            print(f"   - –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç {var}")
        print("\nüìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏")
        print("üìñ –°–º–æ—Ç—Ä–∏—Ç–µ README.MD –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ")
        return False
    else:
        print("‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        print("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É")
        return True

def test_openrouter_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OpenRouter"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OpenRouter...")
    
    try:
        from config import client, OPENROUTER_MODEL
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API
        response = client.chat.completions.create(
            model=OPENROUTER_MODEL,
            messages=[
                {"role": "user", "content": "Say 'Hello' in one word"}
            ],
            max_tokens=10
        )
        
        result = response.choices[0].message.content.strip()
        print(f"‚úÖ OpenRouter API —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: '{result}'")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenRouter: {e}")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å OPENROUTER_API_KEY")
        print("   - –ù–∞–ª–∏—á–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤ –Ω–∞ OpenRouter")
        print("   - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API OpenRouter")
        return False

if __name__ == "__main__":
    config_ok = check_config()
    
    if config_ok:
        test_openrouter_connection()
    
    print("\n" + "=" * 50)
    if config_ok:
        print("üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("üí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
